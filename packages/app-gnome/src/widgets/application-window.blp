using Gtk 4.0;
using Adw 1;

template $ApplicationWindow: Adw.ApplicationWindow {
  name: "application-window";
  default-width: 800;
  default-height: 600;
  width-request: 360;
  height-request: 480;

  Adw.Breakpoint {
    condition ("max-width: 400sp")

    setters {
      splitView.collapsed: true;
      toggleSidebarButton.visible: true;
    }
  }

  content: Adw.OverlaySplitView splitView {
    show-sidebar: bind toggleSidebarButton.active;

    sidebar: $Sidebar sidebar {};

    content: Adw.ToolbarView {
      [top]
      Adw.HeaderBar headerBar {
        [start]
        ToggleButton toggleSidebarButton {
          visible: false;
          icon-name: "sidebar-show-symbolic";
          tooltip-text: _("Open map");
          active: bind splitView.show-sidebar;
        }

        [end]
        MenuButton menuButton {
          primary: true;
          icon-name: 'open-menu-symbolic';
          tooltip-text: _('Menu');
          menu-model: buttonWindowMenu;
        }

        [end]
        Adw.SplitButton runButton {
          halign: center;
          icon-name: "media-playback-start-symbolic";
          styles [
            "suggested-action",
          ]
          menu-model: buttonRunMenu;
        }
      }

      content: Adw.ViewStack stack {
        vexpand: true;

        Adw.ViewStackPage {
          name: "editor";
          title: _("Editor");
          icon-name: "star-filled-rounded-symbolic";
          use-underline: true;

          child: $Editor editor {};
        }

        Adw.ViewStackPage {
          name: "gameConsole";
          title: _("Game Console");
          icon-name: "clock-alt-symbolic";
          use-underline: true;

          child: $GameConsole gameConsole {};
        }

        Adw.ViewStackPage {
          name: "debugger";
          title: _("Debugger");
          icon-name: "clock-alt-symbolic";
          use-underline: true;

          child: $Debugger debugger {};
        }
      };

      [bottom]
      Adw.ViewSwitcherBar switcherBar {
        stack: stack;
        reveal: true;
      }

    };
  };
}

menu buttonWindowMenu {
  section {
    item {
      label: _('_Preferences');
      action: 'app.preferences';
    }

    item {
      label: _('_Keyboard Shortcuts');
      action: 'win.show-help-overlay';
    }

    item {
      label: _('_About Test');
      action: 'app.about';
    }

    item {
      label: _('_Quit');
      action: 'app.quit';
    }
  }
}

menu buttonRunMenu {
  section {
    item ("Assemble and Run")
    item ("Assemble")
    item ("Run")
  }
}
